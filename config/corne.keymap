/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <14 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
        };

        td: tap_dance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_DANCE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC          &kp Q         &kp W            &kp E            &kp R              &kp T        &kp Y    &kp U               &kp I             &kp O            &kp P                    &kp MINUS
&td LG(TAB) TAB  &hml LCTRL A  &hml LEFT_ALT S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G        &kp H    &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr LEFT_ALT L  &hmr RIGHT_CONTROL SEMI  &kp SQT
&kp CAPS         &kp Z         &kp X            &kp C            &kp V              &kp B        &kp N    &kp M               &kp COMMA         &kp DOT          &kp FSLH                 &to 2
                                                &to 0            &sk LEFT_SHIFT     &kp SPACE    &kp RET  &kp BACKSPACE       &to 1
            >;
        };

        sym_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH   &td LS(LG(LC(N4))) DOLLAR  &kp PERCENT     &kp CARET           &kp LESS_THAN         &kp GREATER_THAN       &td SEMI COLON  &kp EQUAL  &kp GRAVE
&trans  &kp CARET        &kp AMPERSAND  &kp ASTRK  &bt BT_SEL 0               &bt BT_SEL 1    &td HOME BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &td END PIPE    &trans     &trans
&trans  &trans           &trans         &trans     &trans                     &bt BT_CLR      &kp LBKT            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RBKT        &trans     &to 2
                                        &trans     &trans                     &kp SPACE       &kp ENTER           &trans                &to 3
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &td H Q         &trans        &kp LS(LC(TAB))          &kp UP    &kp LC(TAB)          &kp PAGE_UP    &trans
&trans               &trans        &trans        &trans        &trans        &kp DEL         &trans        &td LG(LEFT) LEFT_ARROW  &kp DOWN  &td LG(RIGHT) RIGHT  &kp PAGE_DOWN  &trans
&td LG(GRAVE) GRAVE  &trans        &trans        &trans        &trans        &trans          &trans        &trans                   &trans    &trans               &trans         &trans
                                                 &trans        &trans        &kp LEFT_GUI    &kp LEFT_ALT  &trans                   &to 1
            >;
        };

        num_layer {
            bindings = <
&trans       &trans  &kp C_PP   &kp C_PREV            &kp C_NEXT            &kp UNDERSCORE    &kp PLUS      &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS
&trans       &trans  &trans     &kp C_VOL_DN          &kp C_VOL_UP          &kp PLUS          &kp EQUAL     &kp N4  &kp N5  &kp N6  &trans  &trans
&kp C_RESET  &trans  &kp ASTRK  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp PERIOD        &trans        &kp N1  &kp N2  &kp N3  &trans  &to 2
                                &trans                &trans                &kp LEFT_GUI      &kp LEFT_ALT  &trans  &to 1
            >;
        };
    };
};
